<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-23T07:01:59Z" name="Surefire suite" finished-at="2023-09-23T07:05:09Z" duration-ms="190651">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginErrorValidation()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" name="loginErrorValidation" class="practise.tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SODataProviderHashMapTest.submitOrder(java.util.HashMap)[pri:0, instance:practise.tests.SODataProviderHashMapTest@411f53a0]" name="submitOrder" class="practise.tests.SODataProviderHashMapTest"/>
        <method signature="SODataProviderJsonFileTest.submitOrder(java.util.HashMap)[pri:0, instance:practise.tests.SODataProviderJsonFileTest@2b71e916]" name="submitOrder" class="practise.tests.SODataProviderJsonFileTest"/>
        <method signature="SubmitOrderDataProviderTest.submitOrder(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practise.tests.SubmitOrderDataProviderTest@36fc695d]" name="submitOrder" class="practise.tests.SubmitOrderDataProviderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2023-09-23T07:01:59Z" name="Surefire test" finished-at="2023-09-23T07:05:09Z" duration-ms="190651">
      <class name="practise.tests.SODataProviderHashMapTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SODataProviderHashMapTest@411f53a0]" started-at="2023-09-23T07:02:20Z" name="launchApplication" finished-at="2023-09-23T07:02:24Z" duration-ms="3445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:practise.tests.SODataProviderHashMapTest@411f53a0]" started-at="2023-09-23T07:02:24Z" name="submitOrder" data-provider="getData" finished-at="2023-09-23T07:02:34Z" duration-ms="10096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@123, email=jitendra@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SODataProviderHashMapTest@411f53a0]" started-at="2023-09-23T07:02:34Z" name="launchApplication" finished-at="2023-09-23T07:02:37Z" duration-ms="2995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:practise.tests.SODataProviderHashMapTest@411f53a0]" started-at="2023-09-23T07:02:37Z" name="submitOrder" data-provider="getData" finished-at="2023-09-23T07:02:50Z" duration-ms="13073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@123, email=jitendra+1@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
      </class> <!-- practise.tests.SODataProviderHashMapTest -->
      <class name="practise.tests.SODataProviderJsonFileTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SODataProviderJsonFileTest@2b71e916]" started-at="2023-09-23T07:04:13Z" name="launchApplication" finished-at="2023-09-23T07:04:20Z" duration-ms="6814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:practise.tests.SODataProviderJsonFileTest@2b71e916]" started-at="2023-09-23T07:04:20Z" name="submitOrder" data-provider="getData" finished-at="2023-09-23T07:04:32Z" duration-ms="11850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@123, email=jitendra@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SODataProviderJsonFileTest@2b71e916]" started-at="2023-09-23T07:04:32Z" name="launchApplication" finished-at="2023-09-23T07:04:47Z" duration-ms="14963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:practise.tests.SODataProviderJsonFileTest@2b71e916]" started-at="2023-09-23T07:04:47Z" name="submitOrder" data-provider="getData" finished-at="2023-09-23T07:05:00Z" duration-ms="13331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@123, email=jitendra+1@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
      </class> <!-- practise.tests.SODataProviderJsonFileTest -->
      <class name="practise.tests.SubmitOrderDataProviderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SubmitOrderDataProviderTest@36fc695d]" started-at="2023-09-23T07:02:50Z" name="launchApplication" finished-at="2023-09-23T07:03:22Z" duration-ms="32286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practise.tests.SubmitOrderDataProviderTest@36fc695d]" started-at="2023-09-23T07:03:22Z" name="submitOrder" data-provider="getData" finished-at="2023-09-23T07:03:34Z" duration-ms="11265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jitendra@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADIDAS ORIGINAL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SubmitOrderDataProviderTest@36fc695d]" started-at="2023-09-23T07:03:34Z" name="launchApplication" finished-at="2023-09-23T07:03:40Z" duration-ms="6118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practise.tests.SubmitOrderDataProviderTest@36fc695d]" started-at="2023-09-23T07:03:40Z" name="submitOrder" data-provider="getData" finished-at="2023-09-23T07:03:50Z" duration-ms="10419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jitendra+1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ZARA COAT 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
      </class> <!-- practise.tests.SubmitOrderDataProviderTest -->
      <class name="practise.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SubmitOrderTest@28701274]" started-at="2023-09-23T07:03:50Z" name="launchApplication" finished-at="2023-09-23T07:03:59Z" duration-ms="8913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder()[pri:0, instance:practise.tests.SubmitOrderTest@28701274]" started-at="2023-09-23T07:03:59Z" name="submitOrder" finished-at="2023-09-23T07:04:13Z" duration-ms="13726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.SubmitOrderTest@28701274]" started-at="2023-09-23T07:05:00Z" name="launchApplication" finished-at="2023-09-23T07:05:08Z" duration-ms="7680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:practise.tests.SubmitOrderTest@28701274]" started-at="2023-09-23T07:05:08Z" name="OrderHistoryTest" finished-at="2023-09-23T07:05:09Z" depends-on-methods="practise.tests.SubmitOrderTest.submitOrder" duration-ms="1384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
      </class> <!-- practise.tests.SubmitOrderTest -->
      <class name="practise.tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" started-at="2023-09-23T07:01:59Z" name="launchApplication" finished-at="2023-09-23T07:02:05Z" duration-ms="6463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" started-at="2023-09-23T07:02:05Z" name="loginErrorValidation" finished-at="2023-09-23T07:02:06Z" duration-ms="635" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at practise.tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" started-at="2023-09-23T07:02:06Z" name="launchApplication" finished-at="2023-09-23T07:02:10Z" duration-ms="3902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" started-at="2023-09-23T07:02:10Z" name="loginErrorValidation" finished-at="2023-09-23T07:02:10Z" duration-ms="763" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at practise.tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" started-at="2023-09-23T07:02:10Z" name="launchApplication" finished-at="2023-09-23T07:02:15Z" duration-ms="4924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:practise.tests.ErrorValidationsTest@6b2ea799]" started-at="2023-09-23T07:02:15Z" name="productErrorValidation" finished-at="2023-09-23T07:02:20Z" duration-ms="5148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
      </class> <!-- practise.tests.ErrorValidationsTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
